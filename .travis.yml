language: python
cache: pip
sudo: false

branches:
  only:
    - master

stages:
  - check
  - test
  - deploy

python:
  - 2.7
  - 3.4
  - 3.5
  - 3.6

before_install:
  - pip install --upgrade pip
  - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
  - source $HOME/.poetry/env

install: poetry install

before_script:
  - pip install codecov codacy-coverage coveralls
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script: pytest tests/ --cov=jekyllnb --cov-report=xml

after_success:
  - codecov
  - coveralls
  - python-codacy-coverage -r coverage.xml
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

jobs:
  include:
    - stage: test
      python: 3.7
      dist: xenial
      sudo: true

    - stage: check
      name: Safety
      python: 3.6
      install: skip
      before_script: pip install safety
      script:
        - poetry show -a
        - poetry show -a | wc -l
        - poetry show -a | sed 's/(!)//' | awk '{print $1,"==",$2}' | safety check --stdin
      after_success: skip

    - stage: deploy
      name: PyPI
      python: 3.6
      install: poetry install --no-dev
      before_script: skip
      script: skip
      after_success: skip
      before_deploy: poetry build
      deploy:
        provider: script
        script: poetry publish
        skip_cleanup: true
        on:
          tags: true

notifications:
  slack:
    rooms:
      secure: IqtEh6IHyS1EDe2y6cLeroLW9uqOwICgiX1a3K2uq+7MhDAzI/SHQDLzQ6IGn+lNS5HGP1xfVEjov09yGXOo3gtiWFTXOGaWGCYjEMw2KHhxI2NLHuoS0ALWvsCIWfRAE/flu6Ke7s9ymnpQ9LIO5K9iZfldZEZcrFhzeFvwqlck79DuVuPI5Pur3mIcAeRj3jcdCjAZyP6+L38PpL/4i//Osmo0t2sCCogbB4qimAYBblp32/QfKj3STtw3BGlpIRtQ2mAnxcRDnot6knjigZ+o3+RcL8loaQ6woQ5K4MwRpyT9ZUmGrlwIByflJIUfPhud/JZcLreKmGiZkxldoixkcy3dkqU6+PBnveTCzN9OwKrjARTR9s7cIvht+Y5pdzNhsZuogv1oTgyD2vC1Sv4eU3hKzdmY+hGLqKxAy3KGRAr8bqlnl5+hR/DgJ+NTMGAY4kDhdTqO6cYkQ45VAEyk5e1VQh/9h0nQZYH/VqjNerw8p9qAO4oe8qyXiaNLS2ay9Owhdaxej8WWMiQtt5Dt+k6ZKezD7YTJyDPgtq6R1EIVeZW4rMgj3tur9laZOiF6lDY46wfVWecGsrzOoU7zjeSfDzDASaQWEUj3zREIwBzo5FQz4r2jXm2JRQ8PutpZrCtpelZIQ6M1o40oAOFfhxiKevUyMGI+xS8Umss=
